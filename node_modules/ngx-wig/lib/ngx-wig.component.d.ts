import { ElementRef, EventEmitter, OnChanges, OnInit, SimpleChanges, OnDestroy, AfterViewInit } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { NgxWigToolbarService } from './ngx-wig-toolbar.service';
import { TButton, commandFunction } from './config';
import * as i0 from "@angular/core";
/** @dynamic */
export declare class NgxWigComponent implements AfterViewInit, OnInit, OnChanges, OnDestroy, ControlValueAccessor {
    private _ngWigToolbarService;
    private document;
    private window;
    content: string;
    placeholder: string;
    buttons: string;
    disabled: boolean;
    contentChange: EventEmitter<any>;
    ngxWigEditable: ElementRef;
    editMode: boolean;
    container: HTMLElement;
    toolbarButtons: TButton[];
    hasFocus: boolean;
    private _mutationObserver;
    constructor(_ngWigToolbarService: NgxWigToolbarService, document: any, // cannot set Document here - Angular issue - https://github.com/angular/angular/issues/20351
    window: any);
    execCommand(command: string | commandFunction, options?: string): boolean;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    onContentChange(newContent: string): void;
    ngOnChanges(changes: SimpleChanges): void;
    onTextareaChange(newContent: string): void;
    writeValue(value: any): void;
    shouldShowPlaceholder(): boolean;
    private pasteHtmlAtCaret;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: () => void): void;
    private propagateChange;
    propagateTouched: () => void;
    onBlur(): void;
    setDisabledState(isDisabled: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxWigComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgxWigComponent, "ngx-wig", never, { "content": "content"; "placeholder": "placeholder"; "buttons": "buttons"; "disabled": "disabled"; }, { "contentChange": "contentChange"; }, never, never>;
}
